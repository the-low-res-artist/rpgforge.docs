#!/bin/bash

# TODO
# attention probleme de git pull, de build (shopt not found)
# besoin de loop sur tous les book.toml
# bien faire les ln avec les scripts et les media sur tous les dossiers dans book/
# revoir les ./../media (qui ne marchent pas en local de toute facon) dans les fichier md > media/
# build depuis la machine ubuntu pour faire des build test en local
# cr√©er la version francaise et tester la redirection de langue (la page doit exister, obligatoire)

# ---------------------------------------------------------------
# variables
root_dir=${PWD}

# ---------------------------------------------------------------
# PRE BUILD SCRIPTS
echo "[ PRE-BUILD PART ]"
# update the glossary to each src/**/*.md page
cd ${root_dir}/scripts && python3 -m glossary.py && cd ${root_dir}

# save previous build
rm -rf ${PWD}/book.previous_build
mv ${PWD}/book ${PWD}/book.previous_build

# ---------------------------------------------------------------
# BUILD SCRIPTS
echo "[ BUILD PART ] "
# find all the book.toml files and execute the build
for folder in $(find src -type d);
do
    # si le dossier courant contient le fichier book.toml, alors build du book
    if [ -f "${folder}/book.toml" ]; then
        echo mdbook build ${PWD}/${folder} -d ${PWD}/${folder/src/book}
        mdbook build ${PWD}/${folder} -d ${PWD}/${folder/src/book}
    fi
done

# remove unneccessary output folders (https:)
for folder in $(find book -type d);
do
    foldername=$(basename $folder)
    if [[ "${foldername}" == "https:" ]] || [[ "${foldername}" == "http:" ]]; then
        rm -rf "${folder}"
    fi
done

# ---------------------------------------------------------------
# POST BUILD SCRIPTS
echo "[ POST-BUILD PART ]"
cd ${root_dir}/scripts
# add the dropdown "Version" on each book/**/*.html page generated by mdbook
python3 -m version.py
# add the dropdown "Language" on each book/**/*.html page generated by mdbook
python3 -m language.py
# fix link format (remove '.html' endings for external links) on each book/**/*.html page generated by mdbook
python3 -m link.py
# update favicons
python3 -m favicon.py
cd ${root_dir}

# process remaining output folders
for folder in $(find book -type d);
do
    # process folder
    # add js + media links
    ln -s ${PWD}/media/ ${PWD}/${folder}/media
    ln -s ${PWD}/js/ ${PWD}/${folder}/js
done